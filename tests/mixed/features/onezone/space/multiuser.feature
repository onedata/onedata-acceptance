Feature: Multiuser
  Multiuser operations on spaces in Onezone using GUI and REST API

  Background:
    Given initial users configuration in "onezone" Onezone service:
          - user1
          - user2
          - user3
    And initial spaces configuration in "onezone" Onezone service:
        space1:
            owner: user2
            providers:
              - oneprovider-1:
                  storage: posix
                  size: 1000000
    And initial groups configuration in "onezone" Onezone service:
        group1:
          owner: user1
          users:
            - user2:
                privileges:
                  - group_view
                  - group_add_space
                  - group_leave_space
    And opened browsers with [user1, user2] signed in to [onezone, onezone] service

  Scenario Outline: User invites other user to space using <client1>, that user joins to space using <client2> and using <client3> he sees that he has joined to new space
    When using <client1>, user2 invites user1 to space named "space1" in "onezone" Onezone service
    And using <client2>, user1 joins to space using received space invitation token in "onezone" Onezone service
    Then using <client3>, user1 sees that space named "space1" has appeared in "onezone" Onezone service
    And using <client1>, user2 sees that user1 is member of "space1" in "onezone" Onezone service

  Examples:
  | client1 | client2   | client3   |
  | web GUI | web GUI   | REST      |
  | REST    | REST      | web GUI   |
  | web GUI | REST      | REST      |
  | REST    | web GUI   | web GUI   |


  Scenario Outline: User of <client2> fails to modify privileges of space after joining to it from invitation generated by user of <client1>
    When using <client1>, user2 invites user1 to space named "space1" in "onezone" Onezone service
    And using <client2>, user1 joins to space using received space invitation token in "onezone" Onezone service
    And using <client2>, user1 sees following privileges of "user1" user in space "space1" in "onezone" Onezone service:
          User management:
            granted: False
          Harvester management:
            granted: False
          Dataset & archive management:
            granted: False
    And using <client2>, user1 fails to set following privileges for "user1" user in space "space1" in "onezone" Onezone service:
          User management:
            granted: True
          Harvester management:
            granted: True
          Dataset & archive management:
            granted: Partially
            privilege subtypes:
              Manage datasets: True
              View archives: False
    Then using <client1>, user2 sees following privileges of "user1" user in space "space1" in "onezone" Onezone service:
          User management:
            granted: False
          Harvester management:
            granted: False
          Dataset & archive management:
            granted: False

  Examples:
  | client1 | client2   |
  | web GUI | REST      |
  | REST    | web GUI   |


  Scenario Outline: User of <client2> fails to add another user to space after joining to it from invitation generated by user of <client1>
    When using <client1>, user2 invites user1 to space named "space1" in "onezone" Onezone service
    And using <client2>, user1 joins to space using received space invitation token in "onezone" Onezone service
    And using <client2>, user1 fails to invite "user3" to "space1" space members page in "onezone" Onezone service
    Then using <client1>, user2 does not see "user3" user on "space1" space members page in "onezone" Onezone service

  Examples:
  | client1 | client2   |
  | web GUI | REST      |
  | REST    | web GUI   |


  Scenario Outline: Using <client2> user who is not an owner of a space sees group in space members page after group was successfully created using <client1>
    When using <client1>, user2 adds "group1" to space named "space1" in "onezone" Onezone service
    Then using <client2>, user2 sees "group1" group on "space1" space members page in "onezone" Onezone service

  Examples:
  | client1 | client2   |
  | web GUI | REST      |
  | REST    | web GUI   |